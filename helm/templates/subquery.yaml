apiVersion: v1
kind: Service
metadata:
  name: subquery
  labels:
    app.kubernetes.io/service: subquery
    {{- include "x.labels" . | nindent 4 }}
spec:
  selector:
    app.kubernetes.io/service: subquery
    app.kubernetes.io/instance: {{ .Release.Name }}
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: subquery
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/service: subquery
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/service: subquery
        {{- include "x.labels" . | nindent 8 }}
    spec:
      imagePullSecrets:
        - name: {{ .Values.subquery.imagePullSecret }}
      volumes:
        - name: shared-data
          emptyDir: {}
        - name: subquery-project
          configMap:
            name: subquery-project
            items:
              - key: 'project.yaml'
                path: 'project.yaml'
      initContainers:
        - name: wait-for-postgres
          image: busybox
          command:
            - sh
            - -c
            - |
              until nc -z {{ .Release.Name }}-postgresql 5432; do
                echo "waiting for postgres to be ready";
                sleep 4;
              done;
        - name: subquery-pre
          image: {{ .Values.subquery.image }}
          command:
            - '/bin/sh'
            - '-c'
            - 'cp -R /app/* /project && cp /config/project.yaml /project/project.yaml'
          volumeMounts:
            - name: subquery-project
              mountPath: '/config'
            - name: shared-data
              mountPath: /project
      containers:
        - name: subquery
          image: {{ .Values.subquery.image }}
          ports:
            - containerPort: 3000
          args:
            - '-f=/project'
            - '--db-schema=app'
            - '--workers={{ .Values.subquery.workers }}'
            - '--batch-size=30'
            - '--unsafe'
          env:
            - name: DB_USER
              value: 'postgres'
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ template "x.fullname" . }}-postgresql
                  key: postgres-password
            - name: DB_DATABASE
              value: 'postgres'
            - name: DB_HOST
              value: '{{ .Release.Name }}-postgresql'
            - name: DB_PORT
              value: '5432'
          volumeMounts:
            - name: shared-data
              mountPath: /project
          resources:
            requests:
              cpu: {{ .Values.subquery.resources.requests.cpu }}    
              memory: {{ .Values.subquery.resources.requests.memory }}    
            limits:
              cpu: {{ .Values.subquery.resources.limits.cpu }}    
              memory: {{ .Values.subquery.resources.limits.memory }}    
---
{{- if .Values.subquery.createServicePod }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: subquery-metrics
  labels:
    app.kubernetes.io/service: prometheus
    {{- include "x.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/service: subquery
      app.kubernetes.io/instance: {{ .Release.Name }}
  endpoints:
  - targetPort: 3000
    path: /metrics
{{- end }}